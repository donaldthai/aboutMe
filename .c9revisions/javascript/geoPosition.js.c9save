{"ts":1363314322764,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//\n// javascript-mobile-desktop-geolocation\n// https://github.com/estebanav/javascript-mobile-desktop-geolocation\n//\n// Copyright J. Esteban Acosta VillafaÃ±e\n// Licensed under the MIT licenses.\n//\n// Based on Stan Wiechers > geo-location-javascript v0.4.8 > http://code.google.com/p/geo-location-javascript/\n//\n// Revision: $Rev: 01 $: \n// Author: $Author: estebanav $:\n// Date: $Date: 2012-09-07 23:03:53 -0300 (Fri, 07 Sep 2012) $:    \n\nvar bb = { \n        success: 0,\n        error: 0,\n        blackberryTimeoutId : -1\n    };\n\nfunction handleBlackBerryLocationTimeout()\n{\n\tif(bb.blackberryTimeoutId!=-1) {\n\t\tbb.error({ message:     \"Timeout error\", \n                   code:        3\n               });\n\t}\n}\nfunction handleBlackBerryLocation()\n{\n\t\tclearTimeout(bb.blackberryTimeoutId);\n\t\tbb.blackberryTimeoutId=-1;\n        if (bb.success && bb.error) {\n                if(blackberry.location.latitude==0 && blackberry.location.longitude==0) {\n                        //http://dev.w3.org/geo/api/spec-source.html#position_unavailable_error\n                        //POSITION_UNAVAILABLE (numeric value 2)\n                        bb.error({message:\"Position unavailable\", code:2});\n                }\n                else\n                {  \n                        var timestamp=null;\n                        //only available with 4.6 and later\n                        //http://na.blackberry.com/eng/deliverables/8861/blackberry_location_568404_11.jsp\n                        if (blackberry.location.timestamp)\n                        {\n                                timestamp = new Date( blackberry.location.timestamp );\n                        }\n                        bb.success( { timestamp:    timestamp , \n                                      coords: { \n                                            latitude:  blackberry.location.latitude,\n                                            longitude: blackberry.location.longitude\n                                        }\n                                    });\n                }\n                //since blackberry.location.removeLocationUpdate();\n                //is not working as described http://na.blackberry.com/eng/deliverables/8861/blackberry_location_removeLocationUpdate_568409_11.jsp\n                //the callback are set to null to indicate that the job is done\n\n                bb.success = null;\n                bb.error = null;\n        }\n}\n\nvar geoPosition=function() {\n\n        var pub = {};\n        var provider=null;\n\t\tvar u=\"undefined\";\n        var ipGeolocationSrv = 'http://freegeoip.net/json/?callback=JSONPCallback';\n\n        pub.getCurrentPosition = function(success,error,opts)\n        {\n                provider.getCurrentPosition(success, error,opts);\n        }\n\n        pub.jsonp = {\n            callbackCounter: 0,\n\n            fetch: function(url, callback) {\n                var fn = 'JSONPCallback_' + this.callbackCounter++;\n                window[fn] = this.evalJSONP(callback);\n                url = url.replace('=JSONPCallback', '=' + fn);\n\n                var scriptTag = document.createElement('SCRIPT');\n                scriptTag.src = url;\n                document.getElementsByTagName('HEAD')[0].appendChild(scriptTag);\n            },\n\n            evalJSONP: function(callback) {\n                return function(data) {\n                    callback(data);\n                }\n            }\n        }\n\t\t        \n\n        pub.init = function()\n        {\t\t\t\n                try\n                {\n                    //console.debug(( typeof(geoPositionSimulator)!=u ) && (geoPositionSimulator.length > 0 ) );\n                    if ( ( typeof(geoPositionSimulator)!=u ) && (geoPositionSimulator.length > 0 ) ){\n                            provider=geoPositionSimulator;\n                    } else if (typeof(bondi)!=u && typeof(bondi.geolocation)!=u  ) {\n                            provider=bondi.geolocation;\n                    } else if (typeof(navigator.geolocation)!=u) {\n                            provider=navigator.geolocation;\n                            pub.getCurrentPosition = function(success, error, opts) {\n                                    function _success(p) {\n                                            //for mozilla geode,it returns the coordinates slightly differently\n                                            var params;\n                                            if(typeof(p.latitude)!=u) {\n                                                    params = {\n                                                        timestamp: p.timestamp, \n                                                        coords: {\n                                                            latitude:  p.latitude,\n                                                            longitude: p.longitude\n                                                        }\n                                                    };\n                                            } else {\n                                                    params = p;\n                                            }\n                                            success( params );\n                                    }\n                                    provider.getCurrentPosition(_success,error,opts);\n                            }\n                    } else if(typeof(window.blackberry)!=u && blackberry.location.GPSSupported) {\n                            // set to autonomous mode\n\t\t\t\t\t\t\tif(typeof(blackberry.location.setAidMode)==u) {\n                                return false;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tblackberry.location.setAidMode(2);\n                            //override default method implementation\n                            pub.getCurrentPosition = function(success,error,opts)\n                            {\n\t\t\t\t\t\t\t\t\t//alert(parseFloat(navigator.appVersion));\n                                    //passing over callbacks as parameter didn't work consistently\n                                    //in the onLocationUpdate method, thats why they have to be set\n                                    //outside\n                                    bb.success = success;\n                                    bb.error = error;\n                                    //function needs to be a string according to\n                                    //http://www.tonybunce.com/2008/05/08/Blackberry-Browser-Amp-GPS.aspx\n\t\t\t\t\t\t\t\t\tif(opts['timeout']) {\n\t\t\t\t\t\t\t\t\t \tbb.blackberryTimeoutId = setTimeout(\"handleBlackBerryLocationTimeout()\",opts['timeout']);\n\t\t\t\t\t\t\t\t\t} else {\n                                        //default timeout when none is given to prevent a hanging script\n\t\t\t\t\t\t\t\t\t\tbb.blackberryTimeoutId = setTimeout(\"handleBlackBerryLocationTimeout()\",60000);\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tblackberry.location.onLocationUpdate(\"handleBlackBerryLocation()\");\n                                    blackberry.location.refreshLocation();\n                            }\n                            provider = blackberry.location;\t\t\t\t\n                    \n                    } else if ( typeof(Mojo) !=u && typeof(Mojo.Service.Request)!=\"Mojo.Service.Request\") {\n                            provider = true;\n                            pub.getCurrentPosition = function(success, error, opts) {\n                                parameters = {};\n                                if( opts ) {\n                                     //http://developer.palm.com/index.php?option=com_content&view=article&id=1673#GPS-getCurrentPosition\n                                     if (opts.enableHighAccuracy && opts.enableHighAccuracy == true ){\n                                            parameters.accuracy = 1;\n                                     }\n                                     if ( opts.maximumAge ) {\n                                            parameters.maximumAge = opts.maximumAge;\n                                     }\n                                     if (opts.responseTime) {\n                                            if( opts.responseTime < 5 ) {\n                                                    parameters.responseTime = 1;\n                                            } else if ( opts.responseTime < 20 ) {\n                                                    parameters.responseTime = 2;\n                                            } else {\n                                                    parameters.timeout = 3;\n                                            }\n                                     }\n                            }\n\n                             r = new Mojo.Service.Request( 'palm://com.palm.location' , {\n                                    method:\"getCurrentPosition\",\n                                        parameters:parameters,\n                                        onSuccess: function( p ){\n                                            success( { timestamp: p.timestamp, \n                                                       coords: {\n                                                            latitude:  p.latitude, \n                                                            longitude: p.longitude,\n                                                            heading:   p.heading\n                                                        }\n                                                    });\n                                        },\n                                        onFailure: function( e ){\n                                                            if (e.errorCode==1) {\n                                                                error({ code:       3,\n                                                                        message:    \"Timeout\"\n                                                                    });\n                                                            } else if (e.errorCode==2){\n                                                                error({ code:       2,\n                                                                        message:    \"Position unavailable\" \n                                                                    });\n                                                            } else {\n                                                                error({ code:       0,\n                                                                        message:    \"Unknown Error: webOS-code\" + errorCode \n                                                                    });\n                                                            }\n                                                    }\n                                        });\n                            }\n\n                    }\n                    else if (typeof(device)!=u && typeof(device.getServiceObject)!=u) {\n                            provider=device.getServiceObject(\"Service.Location\", \"ILocation\");\n\n                            //override default method implementation\n                            pub.getCurrentPosition = function(success, error, opts){\n                                    function callback(transId, eventCode, result) {\n                                        if (eventCode == 4) {\n                                            error({message:\"Position unavailable\", code:2});\n                                        } else {\n                                            //no timestamp of location given?\n                                            success( {  timestamp:null, \n                                                        coords: {\n                                                                latitude:   result.ReturnValue.Latitude, \n                                                                longitude:  result.ReturnValue.Longitude, \n                                                                altitude:   result.ReturnValue.Altitude,\n                                                                heading:    result.ReturnValue.Heading }\n                                                    });\n                                        }\n                                    }\n                            //location criteria\n                            \n                            var criteria = new Object();\n                            criteria.LocationInformationClass = \"BasicLocationInformation\";\n                            //make the call\n                            provider.ILocation.GetLocation(criteria,callback);\n                            }\n                    } else  {                            \n                            pub.getCurrentPosition = function(success, error, opts) {\n                                    pub.jsonp.fetch(ipGeolocationSrv, \n                                            function( p ){ success( { timestamp: p.timestamp, \n                                                                       coords: { \n                                                                            latitude:   p.latitude, \n                                                                            longitude:  p.longitude,\n                                                                            heading:    p.heading\n                                                                        }\n                                                                    });});\n                            }\n                            provider = true;\n                    }\n\n\n                }\n                catch (e){ \n\t\t\t\t\tif( typeof(console) != u ) console.log(e);\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t}\n                return  provider!=null;\n        }\n        return pub;\n}();\n"]],"start1":0,"start2":0,"length1":0,"length2":13579}]],"length":13579}
